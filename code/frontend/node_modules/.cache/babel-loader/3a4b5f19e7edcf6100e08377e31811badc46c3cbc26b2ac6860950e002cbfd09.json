{"ast":null,"code":"import axios from 'axios';\nconst axiosInstance = axios.create({\n  baseURL: 'http://127.0.0.1:5000',\n  // Replace with your backend URL\n  withCredentials: true\n});\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Fetch token from localStorage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Attach token to Authorization header\n  }\n  return config;\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","withCredentials","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization"],"sources":["/Users/rafaykhan/Desktop/CU Boulder/Fall 2024/Data Center Scale Computing/Project/code/frontend_new/src/utils/axiosConfig.js"],"sourcesContent":["import axios from 'axios';\n\nconst axiosInstance = axios.create({\n  baseURL: 'http://127.0.0.1:5000', // Replace with your backend URL\n  withCredentials: true,\n});\n\naxiosInstance.interceptors.request.use((config) => {\n  const token = localStorage.getItem('token'); // Fetch token from localStorage\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`; // Attach token to Authorization header\n  }\n  return config;\n});\n\nexport default axiosInstance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE,uBAAuB;EAAE;EAClCC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEFH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACjD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACI,OAAO,CAACC,aAAa,GAAG,UAAUJ,KAAK,EAAE,CAAC,CAAC;EACpD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAeP,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}